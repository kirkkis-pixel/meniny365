---
export const prerender = true;

import Layout from '../../../layouts/Layout.astro';
import SectionHeader from '../../../components/SectionHeader.astro';
import Card from '../../../components/Card.astro';
import StatBadge from '../../../components/StatBadge.astro';
import { toSlug } from '../../../lib/slug';
import meninyData from '../../../data/meniny-sk/meniny-2025-simple.json';
import namesOrigins from '../../../data/names-origins.json';
import trendingData from '../../../data/public/trending-weekly.json';

export async function getStaticPaths() {
  // Get all unique names from calendar data
  const allNames = Object.values(meninyData).flat();
  const uniqueNames = [...new Set(allNames)];
  
  return uniqueNames.map((name) => ({
    params: { slug: toSlug(name) },
    props: { name }
  }));
}

const { name } = Astro.props;

// Get name data from our origins database
const nameData = namesOrigins[name] || {
  name: name,
  slug: toSlug(name),
  description: `Inform√°cie o p√¥vode a v√Ωzname mena ${name} sa pr√°ve pripravuj√∫.`,
  originLangs: [],
  variants: [],
  gender: "U"
};

// Calculate frequency in calendar
const allNames = Object.values(meninyData).flat();
const nameCounts: {[key: string]: number} = {};
allNames.forEach(n => {
  nameCounts[n] = (nameCounts[n] || 0) + 1;
});

const frequency = nameCounts[name] || 0;

// Get trending data for this name
const trendingInfo = trendingData.items.find(item => item.name === name);

// Estimate popularity in Slovakia (rough calculation based on calendar frequency)
const getPopularityStats = (freq: number) => {
  if (freq >= 10) return { level: 'Veƒæmi popul√°rne', percentage: 'Top 5%', color: 'green' };
  if (freq >= 5) return { level: 'Popul√°rne', percentage: 'Top 15%', color: 'blue' };
  if (freq >= 2) return { level: 'Stredne popul√°rne', percentage: 'Top 30%', color: 'yellow' };
  if (freq === 1) return { level: 'Menej ƒçast√©', percentage: 'Top 50%', color: 'orange' };
  return { level: 'Vz√°cne', percentage: 'Menej ako 50%', color: 'red' };
};

const popularityStats = getPopularityStats(frequency);

// Find all dates when this name appears
const nameDates: string[] = [];
Object.entries(meninyData).forEach(([date, names]) => {
  if (names.includes(name)) {
    nameDates.push(date);
  }
});

// Get next occurrence
const today = new Date();
const currentYear = today.getFullYear();
const nextOccurrence = nameDates.find(date => {
  const [year, month, day] = date.split('-').map(Number);
  const nameDate = new Date(currentYear, month - 1, day);
  return nameDate >= today;
});

// If no occurrence this year, get first occurrence next year
const nextYearOccurrence = nameDates.find(date => {
  const [year, month, day] = date.split('-').map(Number);
  const nameDate = new Date(currentYear + 1, month - 1, day);
  return true;
});

const nextNameDay = nextOccurrence || nextYearOccurrence;

// Format next occurrence date
let nextOccurrenceFormatted = '';
if (nextNameDay) {
  const [year, month, day] = nextNameDay.split('-').map(Number);
  const nameDate = new Date(year, month - 1, day);
  nextOccurrenceFormatted = nameDate.toLocaleDateString('sk-SK', {
    day: 'numeric',
    month: 'long',
    year: 'numeric'
  });
}

// Generate gift ideas based on name characteristics
const getGiftIdeas = (name: string, gender: string) => {
  const baseIdeas = [
    'Personalizovan√Ω darƒçek s menom',
    'Kvetinov√° kytka',
    'ƒåokol√°dov√© bonb√≥ny',
    'Kniha s venovan√≠m'
  ];
  
  if (gender === 'F') {
    return [...baseIdeas, '≈†perky s menom', 'Parfum', 'Kozmetick√Ω set', 'Ru≈æov√© kvety'];
  } else if (gender === 'M') {
    return [...baseIdeas, 'Hodinky', 'Parfum pre mu≈æov', 'Gadget', 'Modr√© kvety'];
  }
  
  return baseIdeas;
};

const giftIdeas = getGiftIdeas(name, nameData.gender);

// Generate greeting card messages
const getGreetingMessages = (name: string) => [
  `V≈°etko najlep≈°ie k menin√°m, ${name}! üéâ`,
  `${name}, prajem Ti kr√°sny de≈à men√≠n! üåü`,
  `V≈°etko najlep≈°ie k menin√°m, drah√Ω/√° ${name}! üíù`,
  `${name}, nech sa Ti dar√≠ v novom roku ≈æivota! üéÇ`,
  `Srdeƒçn√© gratul√°cie k menin√°m, ${name}! üéà`
];
---

<Layout 
  title={`${name} - P√¥vod, v√Ωznam a meniny | meniny365`}
  description={`V≈°etko o mene ${name}: p√¥vod, v√Ωznam, meniny, darƒçekov√© n√°pady a gratul√°cie. Zistite, kedy m√° ${name} meniny v roku 2025.`}
>
  <div class="min-h-screen bg-gradient-to-br from-slate-50/95 via-white to-indigo-50/40">
    <div class="container mx-auto px-4 py-16">
      <div class="max-w-5xl mx-auto">
        <!-- Hero Section -->
        <div class="text-center mb-16">
          <h1 class="text-5xl font-bold text-slate-900 mb-6 tracking-tight">{name}</h1>
          
          <!-- Key Stats Row -->
          <div class="flex flex-wrap justify-center gap-4 mb-8">
            {nameData.gender && nameData.gender !== 'U' && (
              <StatBadge 
                label={nameData.gender === 'M' ? 'Mu≈æsk√© meno' : nameData.gender === 'F' ? '≈Ωensk√© meno' : 'Univerz√°lne meno'}
                tone="brand"
              />
            )}
            {trendingInfo && (
              <StatBadge 
                label={`Trend: ${trendingInfo.label === 'rising' ? 'St√∫pa' : trendingInfo.label === 'stable' ? 'Stabiln√Ω' : 'Kles√°'}`}
                tone={trendingInfo.label === 'rising' ? 'success' : trendingInfo.label === 'stable' ? 'neutral' : 'warning'}
              />
            )}
            <StatBadge 
              label={popularityStats.level}
              tone={popularityStats.color as any}
            />
          </div>

          <!-- Next Name Day - More Prominent -->
          {nextOccurrenceFormatted && (
            <div class="bg-gradient-to-r from-indigo-500 to-purple-600 rounded-2xl px-8 py-6 mb-8 text-center shadow-lg">
              <div class="flex items-center justify-center mb-2">
                <svg class="w-6 h-6 text-white mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                <span class="text-white text-lg font-medium">ƒéal≈°ie meniny</span>
              </div>
              <div class="text-3xl font-bold text-white">
                {nextOccurrenceFormatted}
              </div>
            </div>
          )}
        </div>

        <!-- Origin and Meaning -->
        <Card class="mb-8">
          <div class="space-y-6">
            <div class="text-center">
              <h2 class="text-2xl font-bold text-slate-900 mb-2">P√¥vod a v√Ωznam</h2>
              <p class="text-slate-600">Hist√≥ria a v√Ωznam mena</p>
            </div>
            
            {nameData.originLangs && nameData.originLangs.length > 0 && (
              <div class="flex flex-wrap justify-center gap-2">
                {nameData.originLangs.map((lang: string) => (
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-slate-100 text-slate-700">
                    {lang}
                  </span>
                ))}
              </div>
            )}
            
            <div class="text-center">
              <p class="text-slate-700 leading-relaxed text-lg max-w-4xl mx-auto">
                {nameData.description}
              </p>
            </div>
            
            {nameData.variants && nameData.variants.length > 0 && (
              <div class="text-center">
                <h3 class="text-lg font-semibold text-slate-900 mb-4">Varianty mena</h3>
                <div class="flex flex-wrap justify-center gap-2">
                  {nameData.variants.map((variant: string) => (
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm bg-slate-100 text-slate-700 hover:bg-slate-200 transition-colors">
                      {variant}
                    </span>
                  ))}
                </div>
              </div>
            )}
          </div>
        </Card>

        <!-- Trending Data -->
        {trendingInfo && (
          <Card class="mb-8">
            <div class="space-y-6">
              <div class="text-center">
                <h2 class="text-2xl font-bold text-slate-900 mb-2 flex items-center justify-center">
                  <svg class="w-6 h-6 text-slate-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                  </svg>
                  Trend v men√°ch
                </h2>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div class="text-center p-4 bg-slate-50 rounded-lg">
                  <div class="text-2xl font-bold text-slate-900 mb-1">{trendingInfo.trendScore}%</div>
                  <div class="text-sm text-slate-600">Trend sk√≥re</div>
                </div>
                
                <div class="text-center p-4 bg-slate-50 rounded-lg">
                  <div class={`text-2xl font-bold mb-1 ${trendingInfo.trendsDelta > 0 ? 'text-green-600' : trendingInfo.trendsDelta < 0 ? 'text-red-600' : 'text-slate-600'}`}>
                    {trendingInfo.trendsDelta > 0 ? '+' : ''}{trendingInfo.trendsDelta}%
                  </div>
                  <div class="text-sm text-slate-600">Zmena trendu</div>
                </div>
                
                <div class="text-center p-4 bg-slate-50 rounded-lg">
                  <div class={`text-2xl font-bold mb-1 ${trendingInfo.viewsDelta > 0 ? 'text-green-600' : trendingInfo.viewsDelta < 0 ? 'text-red-600' : 'text-slate-600'}`}>
                    {trendingInfo.viewsDelta > 0 ? '+' : ''}{trendingInfo.viewsDelta}%
                  </div>
                  <div class="text-sm text-slate-600">Zmena n√°v≈°tevnosti</div>
                </div>
              </div>
            </div>
          </Card>
        )}

        <!-- Popularity Stats -->
        <Card class="mb-8">
          <div class="space-y-6">
            <div class="text-center">
              <h2 class="text-2xl font-bold text-slate-900 mb-2 flex items-center justify-center">
                <svg class="w-6 h-6 text-slate-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                </svg>
                Popularita na Slovensku
              </h2>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div class="text-center p-4 bg-slate-50 rounded-lg">
                <div class={`text-2xl font-bold mb-1 text-${popularityStats.color}-600`}>{popularityStats.level}</div>
                <div class="text-sm text-slate-600">√örove≈à popularity</div>
              </div>
              
              <div class="text-center p-4 bg-slate-50 rounded-lg">
                <div class="text-2xl font-bold text-slate-900 mb-1">{popularityStats.percentage}</div>
                <div class="text-sm text-slate-600">Poz√≠cia</div>
              </div>
              
              <div class="text-center p-4 bg-slate-50 rounded-lg">
                <div class="text-2xl font-bold text-slate-900 mb-1">{frequency}x</div>
                <div class="text-sm text-slate-600">V kalend√°ri roƒçne</div>
              </div>
            </div>
          </div>
        </Card>


        <!-- Calendar Integration - Full Width -->
        <Card class="mb-8">
          <div class="text-center space-y-6">
            <div class="flex items-center justify-center">
              <svg class="w-8 h-8 text-slate-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              <h2 class="text-2xl font-bold text-slate-900">Prida≈• do kalend√°ra</h2>
            </div>
            <p class="text-slate-600 text-lg">Nezabudnite na meniny</p>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 max-w-2xl mx-auto">
              <button 
                id="addToGoogleCalendar"
                class="flex items-center justify-center p-4 bg-slate-50 text-slate-700 rounded-lg hover:bg-slate-100 transition-colors"
              >
                <svg class="w-6 h-6 mr-3" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
                </svg>
                <span class="font-semibold">Google Calendar</span>
              </button>
              
              <button 
                id="addToOutlook"
                class="flex items-center justify-center p-4 bg-slate-50 text-slate-700 rounded-lg hover:bg-slate-100 transition-colors"
              >
                <svg class="w-6 h-6 mr-3" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M7 2h10a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zm0 2v16h10V4H7zm1 1h8v2H8V5zm0 3h8v2H8V8zm0 3h8v2H8v-2z"/>
                </svg>
                <span class="font-semibold">Outlook</span>
              </button>
            </div>
          </div>
        </Card>

        <!-- Prominent Call-to-Action Buttons -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
          <!-- Gift Ideas CTA -->
          <Card class="overflow-hidden">
            <div class="bg-gradient-to-r from-orange-500 to-red-600 p-8 text-center">
              <div class="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4">
                <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7"></path>
                </svg>
              </div>
              <h2 class="text-2xl font-bold text-white mb-2">Darƒçekov√© n√°pady</h2>
              <p class="text-orange-100 mb-6">ƒåo darova≈• na meniny</p>
              <a 
                href="/sk/pohladnice" 
                class="inline-flex items-center px-8 py-4 bg-white text-orange-600 font-bold rounded-lg hover:bg-orange-50 transition-all duration-200 transform hover:scale-105 shadow-lg"
              >
                <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7"></path>
                </svg>
                Zobrazi≈• n√°pady
              </a>
            </div>
          </Card>

          <!-- E-Card CTA -->
          <Card class="overflow-hidden">
            <div class="bg-gradient-to-r from-pink-500 to-purple-600 p-8 text-center">
              <div class="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4">
                <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                </svg>
              </div>
              <h2 class="text-2xl font-bold text-white mb-2">Vytvori≈• e-kartu</h2>
              <p class="text-pink-100 mb-6">Personalizovan√° gratul√°cia</p>
              <a 
                href="/sk/pohladnice"
                class="inline-flex items-center px-8 py-4 bg-white text-pink-600 font-bold rounded-lg hover:bg-pink-50 transition-all duration-200 transform hover:scale-105 shadow-lg"
              >
                <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                </svg>
                Vytvori≈• kartu
              </a>
            </div>
          </Card>
        </div>

        <!-- Related Names -->
        <Card>
          <div class="space-y-6">
            <div class="text-center">
              <h2 class="text-2xl font-bold text-slate-900 mb-2">Podobn√© men√°</h2>
              <p class="text-slate-600">Men√° s podobn√Ωm p√¥vodom alebo v√Ωznamom</p>
            </div>
            
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
              {Object.values(namesOrigins)
                .filter(entry => 
                  entry.name !== name && 
                  (entry.originLangs?.some(lang => nameData.originLangs?.includes(lang)) ||
                   entry.gender === nameData.gender)
                )
                .slice(0, 8)
                .map(entry => (
                  <a 
                    href={`/sk/meno/${entry.slug}`}
                    class="p-4 text-center bg-slate-50 rounded-lg hover:bg-slate-100 transition-colors group"
                  >
                    <div class="font-semibold text-slate-900 group-hover:text-slate-600 transition-colors">{entry.name}</div>
                    <div class="text-xs text-slate-500 mt-2">
                      {entry.originLangs?.[0] || 'Slovensk√©'}
                    </div>
                  </a>
                ))}
            </div>
          </div>
        </Card>
      </div>
    </div>
  </div>

  <script>
    // Copy to clipboard functionality
    document.addEventListener('DOMContentLoaded', () => {
      // Copy greeting messages
      document.querySelectorAll('[onclick*="navigator.clipboard.writeText"]').forEach(element => {
        element.addEventListener('click', async (e) => {
          const message = e.currentTarget.querySelector('span').textContent;
          try {
            await navigator.clipboard.writeText(message);
            const button = e.currentTarget.querySelector('button');
            const originalText = button.textContent;
            button.textContent = 'Skop√≠rovan√©!';
            setTimeout(() => {
              button.textContent = originalText;
            }, 2000);
          } catch (err) {
            console.error('Failed to copy text: ', err);
          }
        });
      });

      // Generate greeting card
      document.getElementById('generateCard')?.addEventListener('click', () => {
        // This would open a modal or redirect to card generator
        window.location.href = `/sk/generate-card?name=${encodeURIComponent('{name}')}`;
      });

      // Add to calendar functionality
      document.getElementById('addToGoogleCalendar')?.addEventListener('click', () => {
        const eventTitle = `Meniny - {name}`;
        const eventDate = '{nextOccurrenceFormatted}';
        const googleCalendarUrl = `https://calendar.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(eventTitle)}&dates=${eventDate}`;
        window.open(googleCalendarUrl, '_blank');
      });

      document.getElementById('addToOutlook')?.addEventListener('click', () => {
        const eventTitle = `Meniny - {name}`;
        const eventDate = '{nextOccurrenceFormatted}';
        const outlookUrl = `https://outlook.live.com/calendar/0/deeplink/compose?subject=${encodeURIComponent(eventTitle)}&startdt=${eventDate}`;
        window.open(outlookUrl, '_blank');
      });
    });
  </script>
</Layout>