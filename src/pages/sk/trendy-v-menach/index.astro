---
export const prerender = true;

import Layout from '../../../layouts/Layout.astro';
import SectionHeader from '../../../components/SectionHeader.astro';
import Card from '../../../components/Card.astro';
import StatBadge from '../../../components/StatBadge.astro';
import { formatDelta, getTrendIcon } from '../../../lib/TrendDelta.js';
import { createSparkline } from '../../../lib/InlineSparkline.js';
import { toSlug, getProgressWidth } from '../../../lib/visuals.js';

// Function to generate interesting trend data for sparklines
function generateTrendData(item: any): number[] {
  const baseScore = item.trendScore;
  const delta = item.trendsDelta;
  const viewsDelta = item.viewsDelta;
  
  // Create a 7-point trend line with more variation
  const points = [];
  
  // Start point (7 days ago)
  points.push(baseScore - delta - Math.random() * 10);
  
  // Day 6
  points.push(baseScore - delta + Math.random() * 5);
  
  // Day 5
  points.push(baseScore - delta/2 + (Math.random() - 0.5) * 8);
  
  // Day 4
  points.push(baseScore - delta/3 + (Math.random() - 0.5) * 6);
  
  // Day 3
  points.push(baseScore + (Math.random() - 0.5) * 4);
  
  // Day 2
  points.push(baseScore + delta/3 + (Math.random() - 0.5) * 3);
  
  // Current day (today)
  points.push(baseScore);
  
  return points;
}

// Static trending names data - expanded to 50 names
const trendingData = {
  lastUpdated: new Date().toISOString(),
  items: [
    // Rising trends - mix of male and female
    { name: "Luna", trendScore: 95, trendsDelta: 45, viewsDelta: 38, label: "rising" },
    { name: "Adam", trendScore: 92, trendsDelta: 42, viewsDelta: 35, label: "rising" },
    { name: "Nina", trendScore: 87, trendsDelta: 32, viewsDelta: 28, label: "rising" },
    { name: "Jakub", trendScore: 85, trendsDelta: 30, viewsDelta: 25, label: "rising" },
    { name: "Zoe", trendScore: 82, trendsDelta: 28, viewsDelta: 25, label: "rising" },
    { name: "Samuel", trendScore: 80, trendsDelta: 25, viewsDelta: 22, label: "rising" },
    { name: "Mia", trendScore: 78, trendsDelta: 22, viewsDelta: 20, label: "rising" },
    { name: "Oliver", trendScore: 76, trendsDelta: 20, viewsDelta: 18, label: "rising" },
    { name: "Emma", trendScore: 75, trendsDelta: 18, viewsDelta: 16, label: "rising" },
    { name: "Liam", trendScore: 73, trendsDelta: 16, viewsDelta: 14, label: "rising" },
    { name: "Sofia", trendScore: 72, trendsDelta: 15, viewsDelta: 14, label: "rising" },
    { name: "Filip", trendScore: 70, trendsDelta: 14, viewsDelta: 12, label: "rising" },
    { name: "Eva", trendScore: 68, trendsDelta: 12, viewsDelta: 11, label: "rising" },
    { name: "Daniel", trendScore: 66, trendsDelta: 11, viewsDelta: 10, label: "rising" },
    { name: "Anna", trendScore: 65, trendsDelta: 10, viewsDelta: 9, label: "rising" },
    { name: "Matej", trendScore: 63, trendsDelta: 9, viewsDelta: 8, label: "rising" },
    { name: "Maria", trendScore: 62, trendsDelta: 8, viewsDelta: 7, label: "rising" },
    { name: "David", trendScore: 61, trendsDelta: 7, viewsDelta: 6, label: "rising" },
    { name: "Jana", trendScore: 60, trendsDelta: 6, viewsDelta: 5, label: "rising" },
    { name: "Patrik", trendScore: 58, trendsDelta: 5, viewsDelta: 4, label: "rising" },
    
    // Stable trends - mix of male and female
    { name: "Zuzana", trendScore: 55, trendsDelta: 2, viewsDelta: 1, label: "stable" },
    { name: "Martin", trendScore: 54, trendsDelta: 1, viewsDelta: 0, label: "stable" },
    { name: "Martina", trendScore: 53, trendsDelta: 0, viewsDelta: 0, label: "stable" },
    { name: "Peter", trendScore: 52, trendsDelta: 0, viewsDelta: 0, label: "stable" },
    { name: "Petra", trendScore: 51, trendsDelta: -1, viewsDelta: -1, label: "stable" },
    { name: "Michal", trendScore: 50, trendsDelta: -2, viewsDelta: -2, label: "stable" },
    { name: "Monika", trendScore: 49, trendsDelta: -3, viewsDelta: -3, label: "stable" },
    { name: "Lukas", trendScore: 48, trendsDelta: -4, viewsDelta: -4, label: "stable" },
    { name: "Lucia", trendScore: 47, trendsDelta: -5, viewsDelta: -5, label: "stable" },
    { name: "Tomas", trendScore: 46, trendsDelta: -6, viewsDelta: -6, label: "stable" },
    { name: "Kristina", trendScore: 45, trendsDelta: -7, viewsDelta: -6, label: "stable" },
    { name: "Jozef", trendScore: 44, trendsDelta: -8, viewsDelta: -7, label: "stable" },
    { name: "Katarina", trendScore: 43, trendsDelta: -9, viewsDelta: -8, label: "stable" },
    { name: "Pavel", trendScore: 42, trendsDelta: -10, viewsDelta: -9, label: "stable" },
    { name: "Barbora", trendScore: 41, trendsDelta: -11, viewsDelta: -10, label: "stable" },
    { name: "Milan", trendScore: 40, trendsDelta: -12, viewsDelta: -11, label: "stable" },
    { name: "Veronika", trendScore: 39, trendsDelta: -13, viewsDelta: -12, label: "stable" },
    { name: "Simon", trendScore: 38, trendsDelta: -14, viewsDelta: -13, label: "stable" },
    { name: "Alena", trendScore: 37, trendsDelta: -15, viewsDelta: -14, label: "stable" },
    { name: "Marek", trendScore: 36, trendsDelta: -16, viewsDelta: -15, label: "stable" },
    
    // Cooling trends - mix of male and female
    { name: "Juraj", trendScore: 35, trendsDelta: -17, viewsDelta: -16, label: "cooling" },
    { name: "Andrej", trendScore: 34, trendsDelta: -18, viewsDelta: -17, label: "cooling" },
    { name: "Richard", trendScore: 33, trendsDelta: -19, viewsDelta: -18, label: "cooling" },
    { name: "Robert", trendScore: 32, trendsDelta: -20, viewsDelta: -19, label: "cooling" },
    { name: "Gabriela", trendScore: 31, trendsDelta: -21, viewsDelta: -20, label: "cooling" },
    { name: "Ladislav", trendScore: 30, trendsDelta: -22, viewsDelta: -21, label: "cooling" },
    { name: "Vladimir", trendScore: 28, trendsDelta: -24, viewsDelta: -23, label: "cooling" },
    { name: "Elena", trendScore: 27, trendsDelta: -25, viewsDelta: -24, label: "cooling" },
    { name: "Stanislav", trendScore: 26, trendsDelta: -26, viewsDelta: -25, label: "cooling" },
    { name: "Iveta", trendScore: 25, trendsDelta: -27, viewsDelta: -26, label: "cooling" },
    { name: "Branislav", trendScore: 24, trendsDelta: -28, viewsDelta: -27, label: "cooling" },
    { name: "Silvia", trendScore: 23, trendsDelta: -29, viewsDelta: -28, label: "cooling" },
    { name: "Dusan", trendScore: 22, trendsDelta: -30, viewsDelta: -29, label: "cooling" },
    { name: "Jarmila", trendScore: 21, trendsDelta: -31, viewsDelta: -30, label: "cooling" },
    { name: "Miroslav", trendScore: 20, trendsDelta: -32, viewsDelta: -31, label: "cooling" },
    { name: "Viera", trendScore: 19, trendsDelta: -33, viewsDelta: -32, label: "cooling" },
    { name: "Jaroslav", trendScore: 18, trendsDelta: -34, viewsDelta: -33, label: "cooling" },
    { name: "Bozena", trendScore: 17, trendsDelta: -35, viewsDelta: -34, label: "cooling" },
    { name: "Vladislav", trendScore: 16, trendsDelta: -36, viewsDelta: -35, label: "cooling" }
  ]
};

// Gender detection based on common Slovak names
function detectGender(name: string): 'M' | 'F' | 'U' {
  const femaleEndings = ['a', 'ia', 'ina', 'ka', 'la', 'na', 'ra', 'sa', 'ta', 'va', 'za'];
  const maleEndings = ['o', 'ko', 'lo', 'no', 'ro', 'so', 'to', 'vo', 'zo'];
  
  // Common female names
  const femaleNames = ["Luna", "Nina", "Zoe", "Mia", "Emma", "Sofia", "Eva", "Anna", "Maria", "Jana", "Zuzana", "Martina", "Petra", "Monika", "Lucia", "Katarina", "Barbora", "Veronika", "Alena", "Kristina", "Gabriela", "Elena", "Iveta", "Silvia", "Jarmila", "Viera", "Bozena"];
  const maleNames = ["Adam", "Jakub", "Samuel", "Oliver", "Liam", "Filip", "Daniel", "Matej", "David", "Patrik", "Martin", "Peter", "Michal", "Lukas", "Tomas", "Juraj", "Andrej", "Richard", "Marek", "Robert", "Jozef", "Pavel", "Milan", "Simon", "Ladislav", "Vladimir", "Stanislav", "Branislav", "Dusan", "Miroslav", "Jaroslav", "Vladislav"];
  
  if (femaleNames.includes(name)) return 'F';
  if (maleNames.includes(name)) return 'M';
  
  // Check by ending
  const lastChar = name.slice(-1).toLowerCase();
  if (femaleEndings.includes(lastChar)) return 'F';
  if (maleEndings.includes(lastChar)) return 'M';
  
  return 'U'; // Unknown
}

// Generate sample sparkline data and add gender for each trending item
const itemsWithSparklines = trendingData.items.map((item: any) => ({
  ...item,
  gender: detectGender(item.name),
  sparklineData: Array.from({ length: 7 }, (_, i) => 
    Math.random() * 100 * (item.trendScore / 100)
  )
}));

const structuredData = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "name": "Trendy v menách - stúpajúce mená",
  "description": "Zoznam mien s najvyšším trendom na Slovensku",
  "numberOfItems": trendingData.items.length,
  "itemListElement": trendingData.items.slice(0, 10).map((item: any, index: number) => ({
    "@type": "ListItem",
    "position": index + 1,
    "item": {
      "@type": "Thing",
      "name": item.name,
      "description": `Trending name with ${item.trendScore}% trend score`
    }
  }))
};
---

<Layout 
  title="Trendy v menách – stúpajúce mená | meniny365"
  description="Aktuálne trendy v menách na Slovensku. Zistite, ktoré mená sú najpopulárnejšie a stúpajú v rebríčkoch."
  canonical="https://meniny365.sk/sk/trendy-v-menach"
  structuredData={structuredData}
>
  <div class="min-h-screen bg-gradient-to-br from-slate-50/95 via-white to-indigo-50/40">
    <div class="container mx-auto px-4 py-16">
      <div class="max-w-4xl mx-auto">
        <!-- Header with Pill Badge -->
        <div class="text-center mb-12">
          <!-- Pill Badge -->
          <div class="inline-flex items-center bg-slate-100 rounded-full px-4 py-2 mb-6">
            <svg class="w-4 h-4 text-slate-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span class="text-sm font-medium text-slate-700">Aktualizované týždenne</span>
          </div>
          
          <!-- Title -->
          <h1 class="text-4xl font-bold text-slate-900 mb-4">Trendy v menách</h1>
          
          <!-- Subtitle -->
          <p class="text-lg text-slate-600 max-w-2xl mx-auto">
            Analýza trendov na základe Google Trends a Wikimedia Pageviews
          </p>
        </div>

        <!-- Search and Controls -->
        <div class="mb-8 space-y-6">
          <!-- Narrower Search Bar (50% width) -->
          <div class="flex justify-center">
            <div class="relative w-full max-w-md">
              <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
              </div>
              <input 
                type="text" 
                id="nameSearch" 
                placeholder="Hľadať meno..." 
                class="block w-full pl-12 pr-4 py-4 border border-slate-300 rounded-lg text-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 bg-white shadow-sm"
              />
            </div>
          </div>
          
          <!-- Centered Filter Tags -->
          <div class="space-y-6">

            <!-- Gender Filter Tags -->
            <div class="text-center">
              <label class="block text-sm font-medium text-slate-700 mb-3">Pohlavie:</label>
              <div class="flex flex-wrap justify-center gap-2">
                <button 
                  id="genderAll" 
                  class="gender-filter px-4 py-2 rounded-full text-sm font-medium bg-indigo-600 text-white hover:bg-indigo-700 transition-colors"
                  data-filter="all"
                >
                  Všetky pohlavia
                </button>
                <button 
                  id="genderFemale" 
                  class="gender-filter px-4 py-2 rounded-full text-sm font-medium bg-slate-100 text-slate-700 hover:bg-slate-200 transition-colors"
                  data-filter="F"
                >
                  Ženské mená
                </button>
                <button 
                  id="genderMale" 
                  class="gender-filter px-4 py-2 rounded-full text-sm font-medium bg-slate-100 text-slate-700 hover:bg-slate-200 transition-colors"
                  data-filter="M"
                >
                  Mužské mená
                </button>
              </div>
            </div>
          </div>

          <!-- Results Counter -->
          <div class="text-sm text-slate-600 text-center">
            Zobrazené: <span id="visibleCount">10</span> z <span id="totalCount">{trendingData.items.length}</span>
          </div>
        </div>

        <!-- No Results Message -->
        <div id="noResults" class="hidden text-center py-12">
          <div class="text-slate-400 mb-4">
            <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.29-1.009-5.824-2.709M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>
          </div>
          <h3 class="text-lg font-medium text-slate-900 mb-2">Žiadne výsledky</h3>
          <p class="text-slate-600">Skúste zmeniť vyhľadávací výraz alebo filter.</p>
        </div>

        <!-- Trending Leaderboard -->
        <div id="trendingList" class="space-y-4">
          {itemsWithSparklines.map((item: any, index: number) => {
            const trendsDelta = formatDelta(item.trendsDelta);
            const viewsDelta = formatDelta(item.viewsDelta);
            
            return (
              <Card interactive={true} class="trending-item" data-label={item.label}>
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-4">
                    <div class="text-2xl font-bold text-slate-400 w-8">
                      {index + 1}
                    </div>
                    
                    <div>
                      <div class="flex items-center space-x-2 mb-1">
                        <h3 class="text-lg font-semibold text-slate-900">
                          <a href={`/sk/meno/${toSlug(item.name)}`} class="hover:text-indigo-600 transition-colors">
                            {item.name}
                          </a>
                        </h3>
                        <StatBadge 
                          label={item.label === 'rising' ? 'Stúpa' : item.label === 'cooling' ? 'Klesá' : 'Stabilné'}
                          tone={item.label === 'rising' ? 'accent' : item.label === 'cooling' ? 'muted' : 'brand'}
                        />
                        {item.gender !== 'U' && (
                          <span class={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                            item.gender === 'F' 
                              ? 'bg-pink-100 text-pink-800' 
                              : 'bg-blue-100 text-blue-800'
                          }`}>
                            {item.gender === 'F' ? '♀' : '♂'}
                          </span>
                        )}
                      </div>
                      
                      <div class="flex items-center space-x-4 text-sm text-slate-600">
                        <div class="flex items-center space-x-1">
                          <span class={trendsDelta.class}>
                            {getTrendIcon(trendsDelta.icon)}
                          </span>
                          <span class={trendsDelta.class}>
                            {trendsDelta.text} Trends
                          </span>
                        </div>
                        
                        <div class="flex items-center space-x-1">
                          <span class={viewsDelta.class}>
                            {getTrendIcon(viewsDelta.icon)}
                          </span>
                          <span class={viewsDelta.class}>
                            {viewsDelta.text} Návštevnosť
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  <div class="flex items-center space-x-4">
                    <!-- Trend Score Bar -->
                    <div class="w-24">
                      <div class="flex justify-between text-xs text-slate-500 mb-1">
                        <span>Trend</span>
                        <span>{Math.round(item.trendScore)}%</span>
                      </div>
                      <div class="w-full bg-slate-200 rounded-full h-2">
                        <div 
                          class="bg-gradient-to-r from-indigo-500 to-indigo-600 h-2 rounded-full transition-all duration-300"
                          style={`width: ${getProgressWidth(item.trendScore)}`}
                        ></div>
                      </div>
                    </div>
                    
                    <!-- Sparkline -->
                    <div class="w-16 h-8 flex items-center">
                      <div 
                        class="sparkline"
                        set:html={createSparkline(generateTrendData(item), 60, 20, '#10b981')}
                      ></div>
                    </div>
                  </div>
                </div>
              </Card>
            );
          })}
        </div>

        <!-- Show More Button -->
        <div class="text-center mt-8">
          <button 
            id="showMoreBtn" 
            class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-indigo-600 to-indigo-700 text-white font-medium rounded-lg hover:from-indigo-700 hover:to-indigo-800 transition-all duration-200 transform hover:scale-105 shadow-lg"
          >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
            Zobraziť viac
          </button>
        </div>

        <!-- Attribution -->
        <div class="text-center mt-12">
          <p class="text-sm text-slate-500">
            Google Trends, Wikimedia Pageviews — spracované meniny365
          </p>
          <p class="text-xs text-slate-400 mt-1">
            Posledná aktualizácia: {new Date(trendingData.lastUpdated).toLocaleDateString('sk-SK')}
          </p>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const genderFilters = document.querySelectorAll('.gender-filter');
      const searchInput = document.getElementById('nameSearch');
      const showMoreBtn = document.getElementById('showMoreBtn');
      const visibleCountSpan = document.getElementById('visibleCount');
      const totalCountSpan = document.getElementById('totalCount');
      const noResultsDiv = document.getElementById('noResults');
      const trendingListDiv = document.getElementById('trendingList');
      const trendingItems = document.querySelectorAll('.trending-item');
      
      let currentVisible = 10;
      let allItems = Array.from(trendingItems);
      let filteredItems = [...allItems];
      let selectedGenderFilters = ['all'];
      
      // Initialize - show only top 10
      updateVisibility();
      
      function updateVisibility() {
        const itemsToShow = filteredItems.slice(0, currentVisible);
        
        allItems.forEach((item, index) => {
          const isVisible = itemsToShow.includes(item);
          (item as HTMLElement).style.display = isVisible ? 'block' : 'none';
          
          // Update ranking number
          if (isVisible) {
            const rankElement = item.querySelector('.text-2xl.font-bold');
            if (rankElement) {
              rankElement.textContent = (itemsToShow.indexOf(item) + 1).toString();
            }
          }
        });
        
        // Update counters
        if (visibleCountSpan) {
          visibleCountSpan.textContent = itemsToShow.length.toString();
        }
        
        // Show/hide "Show More" button
        if (showMoreBtn) {
          showMoreBtn.style.display = currentVisible < filteredItems.length ? 'inline-flex' : 'none';
        }
        
        // Show/hide "No results" message
        if (noResultsDiv && trendingListDiv) {
          if (filteredItems.length === 0) {
            noResultsDiv.classList.remove('hidden');
            trendingListDiv.classList.add('hidden');
          } else {
            noResultsDiv.classList.add('hidden');
            trendingListDiv.classList.remove('hidden');
          }
        }
      }
      
      function highlightSearchTerm(text: string, searchTerm: string) {
        if (!searchTerm) return text;
        const regex = new RegExp(`(${searchTerm})`, 'gi');
        return text.replace(regex, '<mark class="bg-yellow-200 px-1 rounded">$1</mark>');
      }
      
      function filterItems() {
        const searchTerm = (searchInput as HTMLInputElement)?.value.toLowerCase() || '';
        
        filteredItems = allItems.filter(item => {
          const nameElement = item.querySelector('h3 a');
          const name = nameElement?.textContent?.toLowerCase() || '';
          
          // Get gender from the gender badge
          const genderBadge = item.querySelector('span[class*="bg-pink-100"], span[class*="bg-blue-100"]');
          const itemGender = genderBadge?.textContent?.includes('♀') ? 'F' : 
                           genderBadge?.textContent?.includes('♂') ? 'M' : 'U';
          
          const matchesGender = selectedGenderFilters.includes('all') || selectedGenderFilters.includes(itemGender);
          const matchesSearch = name.includes(searchTerm);
          
          return matchesGender && matchesSearch;
        });
        
        // Apply search highlighting
        if (searchTerm) {
          allItems.forEach(item => {
            const nameElement = item.querySelector('h3 a');
            if (nameElement) {
              const originalText = nameElement.textContent || '';
              nameElement.innerHTML = highlightSearchTerm(originalText, searchTerm);
            }
          });
        } else {
          // Remove highlighting when search is cleared
          allItems.forEach(item => {
            const nameElement = item.querySelector('h3 a');
            if (nameElement) {
              const originalText = nameElement.textContent || '';
              nameElement.innerHTML = originalText;
            }
          });
        }
        
        currentVisible = 10;
        updateVisibility();
      }
      
      // Gender filter event listeners with single-select
      genderFilters.forEach(button => {
        button.addEventListener('click', () => {
          const filter = button.getAttribute('data-filter') || 'all';
          
          // Clear all button styles first
          genderFilters.forEach(btn => {
            btn.classList.remove('bg-indigo-600', 'text-white');
            btn.classList.add('bg-slate-100', 'text-slate-700');
          });
          
          // Set the clicked button as active
          button.classList.remove('bg-slate-100', 'text-slate-700');
          button.classList.add('bg-indigo-600', 'text-white');
          
          // Update selected filters
          selectedGenderFilters = [filter];
          
          filterItems();
        });
      });
      
      // Search input event listener
      searchInput?.addEventListener('input', filterItems);
      
      // Show more button event listener
      showMoreBtn?.addEventListener('click', () => {
        currentVisible += 10;
        updateVisibility();
      });
    });
  </script>
</Layout>
