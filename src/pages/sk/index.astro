---
import Layout from '../../layouts/Layout.astro';
import { getTodayString, formatDateSlovak } from '../../lib/date';
import { getNamesByDate } from '../../lib/meniny';
import { toSlug } from '../../lib/slug';

// Get today's date and names
const today = getTodayString();
const todayNames = await getNamesByDate(today);
const todayFormatted = formatDateSlovak(today);

// Generate structured data
const structuredData = {
  "@context": "https://schema.org",
  "@type": "WebPage",
  "name": `AI-Powered Name Days - ${todayFormatted}`,
  "description": `Dnes ${todayFormatted} majú meniny: ${todayNames.join(', ')}. Prvý AI-powered kalendár menín na Slovensku.`,
  "url": `https://meniny365.sk/sk`,
  "mainEntity": {
    "@type": "ItemList",
    "itemListElement": todayNames.map((name, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "name": name,
      "url": `https://meniny365.sk/sk/meno/${toSlug(name)}`
    }))
  }
};
---

<Layout 
  title={`AI-Powered Name Days - ${todayFormatted} | meniny365`}
  description={`Dnes ${todayFormatted} majú meniny: ${todayNames.join(', ')}. Prvý AI-powered kalendár menín na Slovensku s inteligentným vyhľadávaním a návrhmi darčekov.`}
  canonical="https://meniny365.sk/sk"
  structuredData={structuredData}
>
  <!-- Hero Section - Clean Minimal Style -->
  <section class="relative min-h-screen flex items-center justify-center overflow-hidden pt-20">
    <!-- Clean Background -->
    <div class="absolute inset-0 bg-white"></div>
    
    <div class="container relative z-10 text-center max-w-4xl">
      <!-- New Badge - Like Reference -->
      <div class="inline-flex items-center bg-gray-100 rounded-full px-4 py-2 mb-12 animate-fade-in-up">
        <span class="bg-black text-white text-xs font-medium px-2 py-1 rounded-full mr-3">New</span>
        <span class="text-sm text-gray-700">Prvý AI-powered kalendár menín na Slovensku</span>
        <svg class="w-4 h-4 ml-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </div>
      
      <!-- Main Heading - Clean & Bold -->
      <h1 class="text-6xl font-bold text-black mb-8 leading-tight animate-fade-in-up" style="animation-delay: 0.2s;">
        Kto má dnes meniny?
      </h1>
      
      <!-- Subtitle - Clean Description -->
      <p class="text-xl text-gray-600 mb-12 max-w-2xl mx-auto animate-fade-in-up" style="animation-delay: 0.4s;">
        Prvý AI-powered kalendár menín na Slovensku s inteligentným vyhľadávaním, 
        návrhmi darčekov a personalizovanými skúsenosťami.
      </p>
      
      <!-- Call to Actions - Clean Buttons -->
      <div class="flex flex-col sm:flex-row items-center justify-center gap-6 mb-20 animate-fade-in-up" style="animation-delay: 0.6s;">
        <a 
          href="/sk/kalendár"
          class="bg-black text-white px-8 py-4 rounded-lg font-medium hover:bg-gray-800 transition-colors flex items-center gap-2"
        >
          Začať používať
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
        <a href="/sk/návrhy-mena" class="text-black font-medium hover:text-gray-600 transition-colors">
          Návrhy mien
        </a>
      </div>
      
      <!-- Today's Names Display - Clean & Centered -->
      {todayNames.length > 0 ? (
        <div class="bg-gray-50 rounded-2xl p-12 max-w-3xl mx-auto mb-24 animate-fade-in-up" style="animation-delay: 0.8s;">
          <h2 class="text-2xl font-semibold text-black mb-8">{todayFormatted}</h2>
          <h3 class="text-lg text-gray-600 mb-8">Dnes majú meniny:</h3>
          <div class="flex flex-wrap justify-center gap-4">
            {todayNames.map(name => (
              <a 
                href={`/sk/meno/${toSlug(name)}`}
                class="bg-white text-black px-6 py-3 rounded-lg font-medium hover:bg-gray-100 transition-colors border border-gray-200"
              >
                {name}
              </a>
            ))}
          </div>
        </div>
      ) : (
        <div class="bg-gray-50 rounded-2xl p-12 max-w-2xl mx-auto mb-24 animate-fade-in-up" style="animation-delay: 0.8s;">
          <h2 class="text-2xl font-semibold text-black mb-8">{todayFormatted}</h2>
          <p class="text-lg text-gray-600">
            Dnes nemá nikto meniny. Skúste pozrieť iný deň v kalendári.
          </p>
        </div>
      )}
      
      <!-- Horizontal Swipable Months - Clean -->
      <div class="mb-32 animate-fade-in-up" style="animation-delay: 1s;">
        <h3 class="text-title font-light mb-16">Prehľad mesiacov</h3>
        <div class="months-container" id="monthsContainer">
          <!-- Months will be populated by JavaScript -->
        </div>
      </div>
      
      <!-- Premium Calendar View - Clean Design -->
      <div class="calendar-container animate-fade-in-up" style="animation-delay: 1.2s;">
        <div class="calendar-header">
          <div class="calendar-nav">
            <button class="calendar-nav-btn" id="prevMonth">
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="15,18 9,12 15,6"></polyline>
              </svg>
            </button>
            <button class="calendar-nav-btn" id="nextMonth">
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="9,18 15,12 9,6"></polyline>
              </svg>
            </button>
          </div>
          <h3 class="calendar-title" id="calendarTitle">Január 2025</h3>
          <div class="calendar-nav">
            <button class="btn btn-sm btn-ghost" id="todayBtn">Dnes</button>
          </div>
        </div>
        <div class="calendar-grid" id="calendarGrid">
          <!-- Calendar will be populated by JavaScript -->
        </div>
      </div>
    </div>
  </section>

  <!-- Features Section - ProspectPulse Style -->
  <section class="py-40 bg-gray-50">
    <div class="container">
      <div class="text-center mb-32">
        <h2 class="text-headline font-light mb-12">AI-Powered funkcie</h2>
        <p class="text-body text-xl max-w-2xl mx-auto">
          Prvý kalendár menín na Slovensku s umelou inteligenciou. 
          Inteligentné vyhľadávanie, návrhy darčekov a personalizované skúsenosti.
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-16">
        <div class="card p-16 text-center group hover:scale-105 transition-transform">
          <div class="w-16 h-16 bg-blue-500 rounded-2xl flex items-center justify-center mx-auto mb-12">
            <span class="text-2xl">🔍</span>
          </div>
          <h3 class="text-title font-light mb-8">Inteligentné vyhľadávanie</h3>
          <p class="text-body">
            AI-powered vyhľadávanie menín s návrhmi a podobnosťami. 
            Nájdite perfektné meno pre vaše dieťa.
          </p>
        </div>
        
        <div class="card p-16 text-center group hover:scale-105 transition-transform">
          <div class="w-16 h-16 bg-purple-500 rounded-2xl flex items-center justify-center mx-auto mb-12">
            <span class="text-2xl">🎁</span>
          </div>
          <h3 class="text-title font-light mb-8">Návrhy darčekov</h3>
          <p class="text-body">
            Personalizované návrhy darčekov na základe mena a preferencií. 
            AI analyzuje trendy a navrhuje najlepšie možnosti.
          </p>
        </div>
        
        <div class="card p-16 text-center group hover:scale-105 transition-transform">
          <div class="w-16 h-16 bg-green-500 rounded-2xl flex items-center justify-center mx-auto mb-12">
            <span class="text-2xl">📊</span>
          </div>
          <h3 class="text-title font-light mb-8">Analytika menín</h3>
          <p class="text-body">
            Štatistiky popularít mien, trendy a predpovede. 
            Zistite, ktoré mená sú najpopulárnejšie.
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- Quick Actions - Clean -->
  <section class="py-40">
    <div class="container">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-12">
        <a href="/sk/kalendár" class="card p-12 text-center group hover:scale-105 transition-transform">
          <div class="text-3xl mb-8">📅</div>
          <h3 class="text-xl font-medium mb-4 group-hover:text-brand transition-colors">
            Kalendár menín
          </h3>
          <p class="text-caption">Kompletný kalendár pre celý rok</p>
        </a>
        
        <a href="/sk/populárne-mená" class="card p-12 text-center group hover:scale-105 transition-transform">
          <div class="text-3xl mb-8">🔥</div>
          <h3 class="text-xl font-medium mb-4 group-hover:text-brand transition-colors">
            Populárne mená
          </h3>
          <p class="text-caption">Najpopulárnejšie mená na Slovensku</p>
        </a>
        
        <a href="/sk/návrhy-mena" class="card p-12 text-center group hover:scale-105 transition-transform">
          <div class="text-3xl mb-8">💡</div>
          <h3 class="text-xl font-medium mb-4 group-hover:text-brand transition-colors">
            Návrhy mien
          </h3>
          <p class="text-caption">AI-powered návrhy pre vaše dieťa</p>
        </a>
        
        <a href="/sk/blog" class="card p-12 text-center group hover:scale-105 transition-transform">
          <div class="text-3xl mb-8">📝</div>
          <h3 class="text-xl font-medium mb-4 group-hover:text-brand transition-colors">
            Blog
          </h3>
          <p class="text-caption">Články o menách a tradíciách</p>
        </a>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Name day data (simplified for demo)
  const nameDayData = {
    "2025": {
      "01": {
        "01": ["Alexandra", "Ábel", "Makar", "Karina"],
        "02": ["Daniela", "Danila", "Danuta", "Genovéva"],
        "03": ["Drahoľub", "Drahomil", "Drahoslav"],
        "04": ["Artúr", "Arthur", "Andrea"],
        "05": ["Melchior", "Melichar"],
        "06": ["Antónia"],
        "07": ["Atila", "Lucián", "Bohuslava"],
        "08": ["Čestmír", "Pravomil", "Severín"],
        "09": ["Alex", "Alexej", "Julián"],
        "10": ["Agatón", "Dalimil", "Daša"],
        "11": ["Honorát", "Tasilo", "Malvína"],
        "12": ["Arkád", "Arnošt", "Ernest"],
        "13": ["Čistomil", "Rastislav", "Vidor"],
        "14": ["Hilár", "Radovan", "Uriáš"],
        "15": ["Dobroslav", "Domoslav", "Loránt"],
        "16": ["Kristína"],
        "17": ["Antal"],
        "18": ["Nataša"],
        "19": ["Priskus", "Bohdana"],
        "20": ["Mário", "Márius", "Drahomíra"],
        "21": ["Dalibor"],
        "22": ["Fabián", "Sebastián"],
        "23": ["Vincent", "Vincencia"],
        "24": ["Zora", "Dorián", "Slavomil"],
        "25": ["Miloš", "Miloň", "Selma"],
        "26": ["Timotej", "Ctiboh"],
        "27": ["Gejza", "Saul", "Šavol"],
        "28": ["Tamara"],
        "29": ["Polykarp", "Slavibor", "Žarko"],
        "30": ["Bohuš", "Pribislav"],
        "31": ["Alfonz", "Manfréd"]
      },
      "02": {
        "01": ["Hynek", "Trifon", "Tatiana"],
        "02": ["Erik", "Aida", "Erika"],
        "03": ["Blažej", "Celerín"],
        "04": ["Nika", "Veronika"],
        "05": ["Moderát", "Agáta"],
        "06": ["Dorisa", "Dorota"],
        "07": ["Romuald", "Vanda"],
        "08": ["Aranka", "Zoja"],
        "09": ["Rainold", "Zdenko"],
        "10": ["Gabriela", "Omar"],
        "11": ["Dezider", "Želislav"],
        "12": ["Ron", "Ronald", "Perla"],
        "13": ["Arpád", "Jordán"],
        "14": ["Valentín", "Velimír"],
        "15": ["Faust", "Pravoslav"],
        "16": ["Pamfil", "Ida", "Liana"],
        "17": ["Flavián", "Miloslava"],
        "18": ["Jaromír", "Simeon"],
        "19": ["Konrád", "Kurt", "Vlasta"],
        "20": ["Aladár", "Lívia", "Ulrika"],
        "21": ["Eleonóra"],
        "22": ["Etela"],
        "23": ["Roman", "Romana"],
        "24": ["Goran", "Matej"],
        "25": ["Frederik", "Taras"],
        "26": ["Viktor", "Porfýr"],
        "27": ["Alexander", "Leander"],
        "28": ["Elemír", "Zlata"]
      }
    }
  };

  // Month names in Slovak
  const monthNames = [
    'Január', 'Február', 'Marec', 'Apríl', 'Máj', 'Jún',
    'Júl', 'August', 'September', 'Október', 'November', 'December'
  ];

  let currentMonth = new Date().getMonth();
  let currentYear = new Date().getFullYear();

  // Generate horizontal months
  function generateMonths() {
    const container = document.getElementById('monthsContainer');
    if (!container) return;

    container.innerHTML = '';

    for (let i = 0; i < 12; i++) {
      const monthCard = document.createElement('div');
      monthCard.className = `month-card ${i === currentMonth ? 'active' : ''}`;
      
      monthCard.innerHTML = `
        <div class="month-header">
          <div class="month-name">${monthNames[i]}</div>
          <div class="month-year">${currentYear}</div>
        </div>
      `;

      monthCard.addEventListener('click', () => {
        currentMonth = i;
        updateCalendar();
        updateMonths();
      });

      container.appendChild(monthCard);
    }
  }

  // Update months active state
  function updateMonths() {
    const monthCards = document.querySelectorAll('.month-card');
    monthCards.forEach((card, index) => {
      card.classList.toggle('active', index === currentMonth);
    });
  }

  // Generate calendar
  function generateCalendar() {
    const calendarGrid = document.getElementById('calendarGrid');
    const calendarTitle = document.getElementById('calendarTitle');
    
    if (!calendarGrid || !calendarTitle) return;

    // Update title
    calendarTitle.textContent = `${monthNames[currentMonth]} ${currentYear}`;

    // Clear grid
    calendarGrid.innerHTML = '';

    // Add day headers
    const dayHeaders = ['Po', 'Ut', 'St', 'Št', 'Pia', 'So', 'Ne'];
    dayHeaders.forEach(day => {
      const dayHeader = document.createElement('div');
      dayHeader.className = 'calendar-day-header';
      dayHeader.textContent = day;
      calendarGrid.appendChild(dayHeader);
    });

    // Get first day of month and number of days
    const firstDay = new Date(currentYear, currentMonth, 1);
    const lastDay = new Date(currentYear, currentMonth + 1, 0);
    const daysInMonth = lastDay.getDate();
    const startingDay = (firstDay.getDay() + 6) % 7; // Convert Sunday=0 to Monday=0

    // Add empty cells for days before month starts
    for (let i = 0; i < startingDay; i++) {
      const emptyDay = document.createElement('div');
      emptyDay.className = 'calendar-day';
      calendarGrid.appendChild(emptyDay);
    }

    // Add days of month
    for (let day = 1; day <= daysInMonth; day++) {
      const dayElement = document.createElement('div');
      const dayString = String(day).padStart(2, '0');
      const monthString = String(currentMonth + 1).padStart(2, '0');
      
      // Get names for this day
      const names = nameDayData[currentYear]?.[monthString]?.[dayString] || [];
      
      dayElement.className = 'calendar-day';
      if (names.length > 0) {
        dayElement.classList.add('has-names');
      }
      
      // Check if it's today
      const today = new Date();
      if (day === today.getDate() && currentMonth === today.getMonth() && currentYear === today.getFullYear()) {
        dayElement.classList.add('today');
      }

      dayElement.innerHTML = `
        <div class="calendar-day-number">${day}</div>
        <div class="calendar-day-names">
          ${names.slice(0, 2).map(name => `<div class="calendar-day-name">${name}</div>`).join('')}
          ${names.length > 2 ? `<div class="calendar-day-name">+${names.length - 2}</div>` : ''}
        </div>
      `;

      // Add click handler
      dayElement.addEventListener('click', () => {
        window.location.href = `/sk/den/${currentYear}/${monthString}/${dayString}`;
      });

      calendarGrid.appendChild(dayElement);
    }
  }

  // Update calendar
  function updateCalendar() {
    generateCalendar();
  }

  // Navigation handlers
  document.getElementById('prevMonth')?.addEventListener('click', () => {
    currentMonth--;
    if (currentMonth < 0) {
      currentMonth = 11;
      currentYear--;
    }
    updateCalendar();
    updateMonths();
  });

  document.getElementById('nextMonth')?.addEventListener('click', () => {
    currentMonth++;
    if (currentMonth > 11) {
      currentMonth = 0;
      currentYear++;
    }
    updateCalendar();
    updateMonths();
  });

  document.getElementById('todayBtn')?.addEventListener('click', () => {
    const today = new Date();
    currentMonth = today.getMonth();
    currentYear = today.getFullYear();
    updateCalendar();
    updateMonths();
  });

  // Initialize when page loads
  document.addEventListener('DOMContentLoaded', () => {
    generateMonths();
    generateCalendar();
  });
</script>