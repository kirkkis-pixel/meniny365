---
import Layout from '../../layouts/Layout.astro';
import { getTodayString, formatDateSlovak } from '../../lib/date';
import { getNamesByDate } from '../../lib/meniny';
import { toSlug } from '../../lib/slug';
import meninyData from '../../data/meniny-sk/meniny-2025-simple.json';
import ECardMaker from '../../components/ECardMaker.astro';

// Get today's date and names
const today = getTodayString();
const todayNames = getNamesByDate(today);
const todayFormatted = formatDateSlovak(today);

// Generate structured data
const structuredData = {
  "@context": "https://schema.org",
  "@type": "WebPage",
  "name": `AI-Powered Name Days - ${todayFormatted}`,
  "description": `Dnes ${todayFormatted} majú meniny: ${todayNames.join(', ')}. Prvý AI-powered kalendár menín na Slovensku.`,
  "url": `https://meniny365.sk/sk`,
  "mainEntity": {
    "@type": "ItemList",
    "itemListElement": todayNames.map((name, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "name": name,
      "url": `https://meniny365.sk/sk/meno/${toSlug(name)}`
    }))
  }
};
---

<Layout 
  title={`AI-Powered Name Days - ${todayFormatted} | meniny365`}
  description={`Dnes ${todayFormatted} majú meniny: ${todayNames.join(', ')}. Prvý AI-powered kalendár menín na Slovensku s inteligentným vyhľadávaním a návrhmi darčekov.`}
  canonical="https://meniny365.sk/sk"
  structuredData={structuredData}
>
  <!-- Hero Section - Clean Minimal Style -->
  <section class="relative min-h-screen flex items-center overflow-hidden">
    <!-- Subtle Background Overlay -->
    <div class="absolute inset-0 bg-gradient-to-br from-white/90 via-white/95 to-indigo-50/60"></div>
    
    <div class="container relative z-10 text-center max-w-4xl mx-auto px-4">
      <!-- AI-Powered Badge -->
      <div class="inline-flex items-center bg-gradient-to-r from-slate-100 to-indigo-100 rounded-full px-4 py-2 mb-8 animate-fade-in-up shadow-sm">
        <span class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white text-xs font-medium px-2 py-1 rounded-full mr-3">AI-powered</span>
        <span class="text-sm text-slate-700">Prvý kalendár menín na Slovensku</span>
        <svg class="w-4 h-4 ml-2 text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </div>
      
      <!-- Main Heading - Clean & Bold -->
      <h1 class="text-5xl md:text-6xl lg:text-7xl font-bold text-black mb-6 leading-tight animate-fade-in-up" style="animation-delay: 0.2s;">
        Kto má dnes meniny?
      </h1>
      
      <!-- Subtitle - Clean Description -->
      <p class="text-lg md:text-xl text-gray-600 mb-8 max-w-2xl mx-auto leading-relaxed tracking-tight animate-fade-in-up" style="animation-delay: 0.4s;">
        Prvý kalendár menín na Slovensku s inteligentným vyhľadávaním, 
        návrhmi darčekov a personalizovanými skúsenosťami.
      </p>
      
          <!-- Today's Names Display - Super Clear & Focused -->
          <div class="bg-gradient-to-br from-slate-100 via-white to-indigo-50 rounded-2xl p-8 md:p-10 max-w-2xl mx-auto mb-12 animate-fade-in-up shadow-lg border border-slate-200/50" style="animation-delay: 0.8s;">
            <div class="text-center">
              <h2 class="text-xl md:text-2xl font-semibold text-black mb-6">{todayFormatted}</h2>
              
              {todayNames.length > 0 ? (
                <div>
                  <p class="text-base md:text-lg text-gray-700 mb-6">Dnes majú meniny:</p>
                  <div class="flex flex-wrap justify-center gap-3 mb-6">
                    {todayNames.map(name => (
                      <a 
                        href={`/sk/meno/${toSlug(name)}`}
                        class="bg-gradient-to-r from-white to-indigo-50 text-slate-800 px-6 py-3 rounded-full font-medium hover:from-indigo-50 hover:to-indigo-100 transition-all duration-200 border border-indigo-200/50 shadow-sm hover:shadow-md hover:scale-105"
                      >
                        {name}
                      </a>
                    ))}
                  </div>
                  
                  <!-- CTA Buttons -->
                  <div class="flex flex-col sm:flex-row gap-3 justify-center">
                    <a 
                      href="/sk/darceky" 
                      class="inline-flex items-center justify-center bg-gradient-to-r from-slate-800 to-slate-900 text-white px-8 py-4 rounded-2xl font-semibold hover:from-slate-900 hover:to-black transition-all duration-200 transform hover:scale-105 shadow-xl border border-slate-700/50"
                    >
                      <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                      </svg>
                      Generovať darčeky
                    </a>
                    
                    <button 
                      id="createCardBtn"
                      class="inline-flex items-center justify-center bg-gradient-to-r from-slate-800 to-slate-900 text-white px-8 py-4 rounded-2xl font-semibold hover:from-slate-900 hover:to-black transition-all duration-200 transform hover:scale-105 shadow-xl border border-slate-700/50"
                    >
                      <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                      </svg>
                      Vytvoriť pohľadnicu
                    </button>
                  </div>
                </div>
              ) : (
                <div>
                  <p class="text-lg text-gray-700">
                    Dnes nemá nikto meniny. Skúste pozrieť iný deň v kalendári.
                  </p>
                </div>
              )}
            </div>
          </div>
      
      
      <!-- Premium Calendar View - Soft Rounded Design -->
      <div class="w-full max-w-7xl mx-auto animate-fade-in-up" style="animation-delay: 1.2s;">
        <div class="bg-gradient-to-br from-white to-slate-50/50 rounded-3xl shadow-xl border border-slate-200/50 overflow-hidden">
          <!-- Calendar Header -->
          <div class="bg-gradient-to-r from-slate-800 via-slate-900 to-slate-800 text-white px-8 py-6 flex items-center justify-between rounded-t-3xl">
            <div class="flex items-center space-x-3">
              <button class="p-3 bg-white/15 hover:bg-white/25 rounded-2xl transition-all duration-200 hover:scale-105" id="prevMonth">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <polyline points="15,18 9,12 15,6"></polyline>
                </svg>
              </button>
              <button class="p-3 bg-white/15 hover:bg-white/25 rounded-2xl transition-all duration-200 hover:scale-105" id="nextMonth">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <polyline points="9,18 15,12 9,6"></polyline>
                </svg>
              </button>
            </div>
            <h3 class="text-2xl font-bold" id="calendarTitle">Január 2025</h3>
            <div class="relative">
              <input 
                type="text" 
                id="calendarSearch" 
                placeholder="Vyhľadať meno..." 
                class="px-4 py-3 bg-white/10 text-white placeholder-white/60 rounded-2xl focus:outline-none focus:ring-2 focus:ring-white/20 focus:bg-white/15 transition-all duration-200 w-64 border border-white/10"
              >
              <div class="absolute right-3 top-1/2 transform -translate-y-1/2">
                <svg class="w-5 h-5 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
              </div>
              <div id="calendarSearchResults" class="absolute top-full left-0 right-0 mt-2 bg-white rounded-2xl shadow-xl border border-slate-200/50 max-h-64 overflow-y-auto z-50 hidden">
                <!-- Search results will appear here -->
              </div>
            </div>
          </div>
          
          <!-- Calendar Grid -->
          <div class="p-6">
            <!-- Day Headers -->
            <div class="grid grid-cols-7 gap-2 mb-4">
              <div class="text-center py-3 font-semibold text-slate-600 text-sm uppercase tracking-wider bg-slate-50 rounded-xl">Po</div>
              <div class="text-center py-3 font-semibold text-slate-600 text-sm uppercase tracking-wider bg-slate-50 rounded-xl">Ut</div>
              <div class="text-center py-3 font-semibold text-slate-600 text-sm uppercase tracking-wider bg-slate-50 rounded-xl">St</div>
              <div class="text-center py-3 font-semibold text-slate-600 text-sm uppercase tracking-wider bg-slate-50 rounded-xl">Št</div>
              <div class="text-center py-3 font-semibold text-slate-600 text-sm uppercase tracking-wider bg-slate-50 rounded-xl">Pia</div>
              <div class="text-center py-3 font-semibold text-slate-600 text-sm uppercase tracking-wider bg-slate-50 rounded-xl">So</div>
              <div class="text-center py-3 font-semibold text-slate-600 text-sm uppercase tracking-wider bg-slate-50 rounded-xl">Ne</div>
            </div>
            
            <!-- Calendar Days -->
            <div class="grid grid-cols-7 gap-1" id="calendarGrid">
              <!-- Calendar will be populated by JavaScript -->
            </div>
          </div>
        </div>
      </div>
      
        </div>
      </section>

      <!-- E-Card Maker Modal -->
      <div id="cardModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4" style="display: none !important;">
        <div class="bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
          <div class="sticky top-0 bg-white border-b border-slate-200 p-4 flex items-center justify-between">
            <h3 class="text-xl font-semibold text-slate-800">Vytvoriť e-pohľadnicu</h3>
            <button id="closeCardModal" class="text-slate-400 hover:text-slate-600 transition-colors">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          <div class="p-6">
            <ECardMaker />
          </div>
        </div>
      </div>

      <!-- Features Section - ProspectPulse Style -->
  <section class="py-40 bg-gray-50">
    <div class="container">
      <div class="text-center mb-32">
        <h2 class="text-headline font-light mb-12">AI-Powered funkcie</h2>
        <p class="text-body text-xl max-w-2xl mx-auto">
          Prvý kalendár menín na Slovensku s umelou inteligenciou. 
          Inteligentné vyhľadávanie, návrhy darčekov a personalizované skúsenosti.
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-16">
        <div class="card p-16 text-center group hover:scale-105 transition-transform">
          <div class="w-16 h-16 bg-blue-500 rounded-2xl flex items-center justify-center mx-auto mb-12">
            <span class="text-2xl">🔍</span>
          </div>
          <h3 class="text-title font-light mb-8">Inteligentné vyhľadávanie</h3>
          <p class="text-body">
            AI-powered vyhľadávanie menín s návrhmi a podobnosťami. 
            Nájdite perfektné meno pre vaše dieťa.
          </p>
        </div>
        
        <div class="card p-16 text-center group hover:scale-105 transition-transform">
          <div class="w-16 h-16 bg-purple-500 rounded-2xl flex items-center justify-center mx-auto mb-12">
            <span class="text-2xl">🎁</span>
          </div>
          <h3 class="text-title font-light mb-8">Návrhy darčekov</h3>
          <p class="text-body">
            Personalizované návrhy darčekov na základe mena a preferencií. 
            AI analyzuje trendy a navrhuje najlepšie možnosti.
          </p>
        </div>
        
        <div class="card p-16 text-center group hover:scale-105 transition-transform">
          <div class="w-16 h-16 bg-green-500 rounded-2xl flex items-center justify-center mx-auto mb-12">
            <span class="text-2xl">📊</span>
          </div>
          <h3 class="text-title font-light mb-8">Analytika menín</h3>
          <p class="text-body">
            Štatistiky popularít mien, trendy a predpovede. 
            Zistite, ktoré mená sú najpopulárnejšie.
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- Quick Actions - Clean -->
  <section class="py-40">
    <div class="container">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-12">
        <a href="/sk/kalendár" class="card p-12 text-center group hover:scale-105 transition-transform">
          <div class="text-3xl mb-8">📅</div>
          <h3 class="text-xl font-medium mb-4 group-hover:text-brand transition-colors">
            Kalendár menín
          </h3>
          <p class="text-caption">Kompletný kalendár pre celý rok</p>
        </a>
        
        <a href="/sk/populárne-mená" class="card p-12 text-center group hover:scale-105 transition-transform">
          <div class="text-3xl mb-8">🔥</div>
          <h3 class="text-xl font-medium mb-4 group-hover:text-brand transition-colors">
            Populárne mená
          </h3>
          <p class="text-caption">Najpopulárnejšie mená na Slovensku</p>
        </a>
        
        <a href="/sk/návrhy-mena" class="card p-12 text-center group hover:scale-105 transition-transform">
          <div class="text-3xl mb-8">💡</div>
          <h3 class="text-xl font-medium mb-4 group-hover:text-brand transition-colors">
            Návrhy mien
          </h3>
          <p class="text-caption">AI-powered návrhy pre vaše dieťa</p>
        </a>
        
        <a href="/sk/blog" class="card p-12 text-center group hover:scale-105 transition-transform">
          <div class="text-3xl mb-8">📝</div>
          <h3 class="text-xl font-medium mb-4 group-hover:text-brand transition-colors">
            Blog
          </h3>
          <p class="text-caption">Články o menách a tradíciách</p>
        </a>
      </div>
    </div>
  </section>
</Layout>

    <script define:vars={{ meninyData }}>
      // Use the imported data directly
      let nameDayData = meninyData;

  // Month names in Slovak
  const monthNames = [
    'Január', 'Február', 'Marec', 'Apríl', 'Máj', 'Jún',
    'Júl', 'August', 'September', 'Október', 'November', 'December'
  ];

  let currentMonth = new Date().getMonth();
  let currentYear = new Date().getFullYear();

  // Generate horizontal months
  function generateMonths() {
    const container = document.getElementById('monthsContainer');
    if (!container) return;

    container.innerHTML = '';

    for (let i = 0; i < 12; i++) {
      const monthCard = document.createElement('div');
      monthCard.className = `month-card ${i === currentMonth ? 'active' : ''}`;
      
      monthCard.innerHTML = `
        <div class="month-header">
          <div class="month-name">${monthNames[i]}</div>
          <div class="month-year">${currentYear}</div>
        </div>
      `;

      monthCard.addEventListener('click', () => {
        currentMonth = i;
        updateCalendar();
        updateMonths();
      });

      container.appendChild(monthCard);
    }
  }

  // Update months active state
  function updateMonths() {
    const monthCards = document.querySelectorAll('.month-card');
    monthCards.forEach((card, index) => {
      card.classList.toggle('active', index === currentMonth);
    });
  }

  // Generate calendar
  function generateCalendar() {
    const calendarGrid = document.getElementById('calendarGrid');
    const calendarTitle = document.getElementById('calendarTitle');
    
    if (!calendarGrid || !calendarTitle) return;

    // Update title
    calendarTitle.textContent = `${monthNames[currentMonth]} ${currentYear}`;

    // Clear grid
    calendarGrid.innerHTML = '';

    // Get first day of month and number of days
    const firstDay = new Date(currentYear, currentMonth, 1);
    const lastDay = new Date(currentYear, currentMonth + 1, 0);
    const daysInMonth = lastDay.getDate();
    const startingDay = (firstDay.getDay() + 6) % 7; // Convert Sunday=0 to Monday=0

    // Add empty cells for days before month starts
    for (let i = 0; i < startingDay; i++) {
      const emptyDay = document.createElement('div');
      emptyDay.className = 'h-48 bg-slate-50/30 rounded-2xl';
      calendarGrid.appendChild(emptyDay);
    }

    // Add days of month
    for (let day = 1; day <= daysInMonth; day++) {
      const dayElement = document.createElement('div');
      const dayString = String(day).padStart(2, '0');
      const monthString = String(currentMonth + 1).padStart(2, '0');
      
      // Get names for this day from the flat structure
      const dateKey = `${currentYear}-${monthString}-${dayString}`;
      const names = nameDayData[dateKey] || [];
      
      // Check if it's today
      const today = new Date();
      const isToday = day === today.getDate() && currentMonth === today.getMonth() && currentYear === today.getFullYear();
      
      dayElement.className = `h-48 rounded-2xl p-3 cursor-pointer transition-all duration-200 hover:scale-105 ${
        isToday 
          ? 'bg-gradient-to-br from-slate-800 to-slate-900 text-white shadow-lg' 
          : names.length > 0 
            ? 'bg-gradient-to-br from-slate-50 to-slate-100 hover:from-slate-100 hover:to-slate-200 border border-slate-200/50' 
            : 'bg-gradient-to-br from-white to-slate-50/30 hover:from-slate-50/40 hover:to-slate-100/40 border border-slate-200/30'
      }`;

      // Show up to 6 names initially, then "show more" if there are more
      const maxInitialNames = 6;
      const hasMoreNames = names.length > maxInitialNames;
      const initialNames = names.slice(0, maxInitialNames);
      const remainingNames = names.slice(maxInitialNames);
      
      dayElement.innerHTML = `
        <div class="flex flex-col h-full">
          <div class="text-sm font-bold mb-1 flex-shrink-0">${day}</div>
          <div class="flex-1 flex flex-col space-y-0.5 overflow-hidden">
            ${names.length > 0 ? (
              initialNames.map(name => 
                `<div class="text-xs font-medium truncate px-2 py-1 ${isToday ? 'bg-white/20 text-white rounded-full' : 'bg-slate-200/60 text-slate-700 rounded-full'} text-center">${name}</div>`
              ).join('') +
              (hasMoreNames ? 
                `<button class="text-xs px-2 py-1 ${isToday ? 'bg-white/10 text-white hover:bg-white/20' : 'bg-slate-100/80 text-slate-600 hover:bg-slate-200/80'} rounded-full text-center transition-colors show-more-btn" data-day="${day}" data-month="${currentMonth}" data-year="${currentYear}">
                  +${remainingNames.length} viac
                </button>` : ''
              )
            ) : (
              `<div class="text-xs ${isToday ? 'text-white/50' : 'text-slate-400'} text-center mt-2">-</div>`
            )}
          </div>
        </div>
      `;

      // Add click handler for the day
      dayElement.addEventListener('click', (e) => {
        // Don't navigate if clicking the "show more" button
        if (e.target.classList.contains('show-more-btn')) {
          e.stopPropagation();
          return;
        }
        window.location.href = `/sk/den/${currentYear}/${monthString}/${dayString}`;
      });
      
      // Add click handler for "show more" button
      if (hasMoreNames) {
        const showMoreBtn = dayElement.querySelector('.show-more-btn');
        if (showMoreBtn) {
          showMoreBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            showAllNames(dayElement, names, isToday, e);
          });
        }
      }

      calendarGrid.appendChild(dayElement);
    }
  }

      // Show all names in a popup
      function showAllNames(dayElement, names, isToday, event) {
        // Remove any existing popup
        const existingPopup = document.querySelector('.names-popup');
        if (existingPopup) {
          existingPopup.remove();
        }

        // Create popup element
        const popup = document.createElement('div');
        popup.className = 'names-popup fixed z-50 bg-white rounded-2xl shadow-2xl border border-slate-200/50 p-4 max-w-xs animate-fade-in-up';
        
        // Position the popup near the clicked button
        const rect = event.target.getBoundingClientRect();
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;
        
        popup.style.left = `${rect.left + scrollLeft - 50}px`;
        popup.style.top = `${rect.bottom + scrollTop + 8}px`;
        
        // Create popup content
        popup.innerHTML = `
          <div class="flex items-center justify-between mb-3">
            <h4 class="font-semibold text-slate-800 text-sm">Všetky mená</h4>
            <button class="close-popup text-slate-400 hover:text-slate-600 transition-colors">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          <div class="flex flex-wrap gap-1">
            ${names.map(name => 
              `<div class="text-xs font-medium px-2 py-1 ${isToday ? 'bg-slate-800 text-white' : 'bg-slate-100 text-slate-700'} rounded-full">${name}</div>`
            ).join('')}
          </div>
        `;
        
        // Add to document
        document.body.appendChild(popup);
        
        // Add close functionality
        const closeBtn = popup.querySelector('.close-popup');
        closeBtn.addEventListener('click', () => {
          popup.remove();
        });
        
        // Close on click outside
        setTimeout(() => {
          document.addEventListener('click', function closePopup(e) {
            if (!popup.contains(e.target) && !event.target.contains(e.target)) {
              popup.remove();
              document.removeEventListener('click', closePopup);
            }
          });
        }, 100);
      }

  // Update calendar
  function updateCalendar() {
    generateCalendar();
  }

  // Navigation handlers
  document.getElementById('prevMonth')?.addEventListener('click', () => {
    currentMonth--;
    if (currentMonth < 0) {
      currentMonth = 11;
      currentYear--;
    }
    updateCalendar();
    updateMonths();
  });

  document.getElementById('nextMonth')?.addEventListener('click', () => {
    currentMonth++;
    if (currentMonth > 11) {
      currentMonth = 0;
      currentYear++;
    }
    updateCalendar();
    updateMonths();
  });

  document.getElementById('todayBtn')?.addEventListener('click', () => {
    const today = new Date();
    currentMonth = today.getMonth();
    currentYear = today.getFullYear();
    updateCalendar();
    updateMonths();
  });

      // Calendar search functionality
      function setupCalendarSearch() {
        const searchInput = document.getElementById('calendarSearch');
        const searchResults = document.getElementById('calendarSearchResults');
        
        searchInput.addEventListener('input', (e) => {
          const query = e.target.value.toLowerCase().trim();
          
          if (query.length < 2) {
            searchResults.classList.add('hidden');
            return;
          }
          
          const results = [];
          for (const [date, names] of Object.entries(nameDayData)) {
            const matchingNames = names.filter(name => 
              name.toLowerCase().includes(query)
            );
            
            if (matchingNames.length > 0) {
              results.push({
                date,
                names: matchingNames,
                allNames: names
              });
            }
          }
          
          if (results.length > 0) {
            searchResults.innerHTML = `
              <div class="p-4">
                <h4 class="font-semibold text-slate-800 mb-3">Nájdené mená (${results.length} dní):</h4>
                <div class="space-y-2">
                  ${results.slice(0, 8).map(result => `
                    <div class="flex items-center justify-between p-3 bg-slate-50 rounded-xl hover:bg-slate-100 transition-colors">
                      <div>
                        <div class="font-medium text-slate-800">${formatDateForDisplay(result.date)}</div>
                        <div class="text-sm text-slate-600">${result.names.join(', ')}</div>
                      </div>
                      <button onclick="goToDate('${result.date}')" class="px-3 py-1 bg-gradient-to-r from-slate-700 to-slate-800 text-white rounded-lg text-sm hover:from-slate-800 hover:to-slate-900 transition-all">
                        Zobraziť
                      </button>
                    </div>
                  `).join('')}
                  ${results.length > 8 ? `<div class="text-sm text-slate-500 text-center pt-2">... a ${results.length - 8} ďalších</div>` : ''}
                </div>
              </div>
            `;
            searchResults.classList.remove('hidden');
          } else {
            searchResults.innerHTML = '<div class="p-4 text-slate-500 text-center">Žiadne mená sa nenašli</div>';
            searchResults.classList.remove('hidden');
          }
        });
        
        // Hide results when clicking outside
        document.addEventListener('click', (e) => {
          if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
            searchResults.classList.add('hidden');
          }
        });
      }
  
  function formatDateForDisplay(dateStr) {
    const [year, month, day] = dateStr.split('-');
    const monthNames = [
      'Január', 'Február', 'Marec', 'Apríl', 'Máj', 'Jún',
      'Júl', 'August', 'September', 'Október', 'November', 'December'
    ];
    return `${day}. ${monthNames[parseInt(month) - 1]} ${year}`;
  }
  
  function goToDate(dateStr) {
    const [year, month, day] = dateStr.split('-');
    currentYear = parseInt(year);
    currentMonth = parseInt(month) - 1;
    updateCalendar();
    updateMonths();
    document.getElementById('searchResults').classList.add('hidden');
    document.getElementById('nameSearch').value = '';
  }
  
  // Make goToDate globally available
  window.goToDate = goToDate;

      // Initialize when page loads
      document.addEventListener('DOMContentLoaded', () => {
        generateCalendar();
        setupCalendarSearch();
        
        // Handle card creation button
        const createCardBtn = document.getElementById('createCardBtn');
        const cardModal = document.getElementById('cardModal');
        const closeCardModal = document.getElementById('closeCardModal');
        
        // Function to show modal
        function showModal() {
          if (cardModal) {
            cardModal.classList.remove('hidden');
            cardModal.style.display = 'flex';
            document.body.style.overflow = 'hidden'; // Prevent background scrolling
          }
        }
        
        // Function to hide modal
        function hideModal() {
          if (cardModal) {
            cardModal.classList.add('hidden');
            cardModal.style.display = 'none';
            document.body.style.overflow = ''; // Restore scrolling
          }
        }
        
        createCardBtn?.addEventListener('click', (e) => {
          e.preventDefault();
          showModal();
        });
        
        closeCardModal?.addEventListener('click', (e) => {
          e.preventDefault();
          hideModal();
        });
        
        // Close modal when clicking outside
        cardModal?.addEventListener('click', (e) => {
          if (e.target === cardModal) {
            hideModal();
          }
        });
        
        // Close modal with Escape key
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && cardModal && !cardModal.classList.contains('hidden')) {
            hideModal();
          }
        });
      });
    </script>